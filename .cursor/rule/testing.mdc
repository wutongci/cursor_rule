---
description:  测试相关规则
globs: 
---

## 描述

定义了与测试相关的 AI 行为, 遵循TDD原则。

## 规则

1.  **TDD 优先:** 新功能开发前，先编写测试用例。参考 `testingStrategies.md`。

    ```mermaid
    flowchart TD
      Start[新功能开发] --> WriteTest[编写测试用例]
      WriteTest --> Implement[实现功能]
      Implement --> Test[运行测试]
      Test --> |通过| Finish[完成]
      Test --> |失败| Debug[调试]
      Debug --> Implement
    ```

2.  **集成测试先行:** 新功能优先创建集成测试, 验证核心逻辑。

3.  **测试用例描述:** 在 `memory-bank/open/{task-id}/activeContext.md` 中详细记录测试用例描述、Prompt 内容、测试结果和调试过程。

4.  **Given-When-Then:** 推荐使用 Given-When-Then 风格编写测试。

5.  **测试框架:**
    *   单元测试: 推荐 [选择的框架, 如 Jest, Mocha]。
    *   集成测试: 推荐 [选择的框架]。
    *   组件测试: 优先使用 `@testing-library/react` (如果是 React 项目)。

6.  **测试覆盖率:** 争取达到 80% 以上。

7.  **存根函数:** 要求 Cursor 实现功能前，先创建基本存根函数。

8.  **测试驱动重构:** 重构时, 优先修改/增加测试以反映重构目标。

9.  **运行测试快捷键:** 建议设置快捷键 (如 `Alt+Enter`)。

10. **AI 辅助:**
    *   提供测试用例示例/模板。
    *   测试失败时，提供修复建议。
    *   优先在当前任务目录 `memory-bank/open/{task-id}/` 下创建测试文件。
    *   根据`general.md`中的项目特定模式, 提示用户编写符合项目规范的测试.